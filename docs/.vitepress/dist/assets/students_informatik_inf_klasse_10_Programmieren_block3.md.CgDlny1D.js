import{_ as e,c as s,a2 as a,o as n}from"./chunks/framework.BQmytedh.js";const u=JSON.parse('{"title":"♻️ Block 3: Modularisierung & Bibliotheken","description":"Wir lernen, wie man Code in Funktionen aufteilt und externe Bibliotheken verwendet.","frontmatter":{"title":"♻️ Block 3: Modularisierung & Bibliotheken","description":"Wir lernen, wie man Code in Funktionen aufteilt und externe Bibliotheken verwendet."},"headers":[],"relativePath":"students/informatik/inf_klasse_10/Programmieren/block3.md","filePath":"students/informatik/inf_klasse_10/Programmieren/block3.md","lastUpdated":1753078044000}'),l={name:"students/informatik/inf_klasse_10/Programmieren/block3.md"};function t(r,i,h,o,p,k){return n(),s("div",null,i[0]||(i[0]=[a(`<h1 id="♻️-block-3-modularisierung-bibliotheken" tabindex="-1">♻️ Block 3: Modularisierung &amp; Bibliotheken <a class="header-anchor" href="#♻️-block-3-modularisierung-bibliotheken" aria-label="Permalink to &quot;♻️ Block 3: Modularisierung &amp; Bibliotheken&quot;">​</a></h1><p>Heute lernst du, wie du deinen Code besser organisierst.</p><hr><h2 id="🎯-was-lernst-du" tabindex="-1">🎯 Was lernst du? <a class="header-anchor" href="#🎯-was-lernst-du" aria-label="Permalink to &quot;🎯 Was lernst du?&quot;">​</a></h2><p>✅ Funktionen schreiben<br> ✅ Eigene Module nutzen<br> ✅ Externe Bibliotheken einbinden</p><hr><h2 id="📦-1-funktionen" tabindex="-1">📦 <strong>1) Funktionen</strong> <a class="header-anchor" href="#📦-1-funktionen" aria-label="Permalink to &quot;📦 **1) Funktionen**&quot;">​</a></h2><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> quadrat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t, seite):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        t.forward(seite)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        t.left(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><hr><h2 id="🧩-2-modul-erstellen" tabindex="-1">🧩 <strong>2) Modul erstellen</strong> <a class="header-anchor" href="#🧩-2-modul-erstellen" aria-label="Permalink to &quot;🧩 **2) Modul erstellen**&quot;">​</a></h2><ul><li>Speichere die Funktion in <code>formen.py</code></li><li>Importiere sie in deinem Hauptprogramm:</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> turtle</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> formen</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tina </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> turtle.Turtle()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">formen.quadrat(tina, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr><h2 id="📚-3-externe-bibliotheken" tabindex="-1">📚 <strong>3) Externe Bibliotheken</strong> <a class="header-anchor" href="#📚-3-externe-bibliotheken" aria-label="Permalink to &quot;📚 **3) Externe Bibliotheken**&quot;">​</a></h2><ul><li>Python hat viele fertige Module.</li><li>Beispiel: <code>random</code> für Zufallszahlen.</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> random</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">zahl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> random.randint(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(zahl)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><hr><h2 id="🛠️-4-aufgaben" tabindex="-1">🛠️ <strong>4) Aufgaben</strong> <a class="header-anchor" href="#🛠️-4-aufgaben" aria-label="Permalink to &quot;🛠️ **4) Aufgaben**&quot;">​</a></h2><h3 id="🐢-aufgabe-1-funktion-schreiben" tabindex="-1">🐢 Aufgabe 1: Funktion schreiben <a class="header-anchor" href="#🐢-aufgabe-1-funktion-schreiben" aria-label="Permalink to &quot;🐢 Aufgabe 1: Funktion schreiben&quot;">​</a></h3><ul><li>Erstelle eine Funktion <code>dreieck(t, seite)</code></li></ul><hr><h3 id="✏️-aufgabe-2-zufallige-farbe" tabindex="-1">✏️ Aufgabe 2: Zufällige Farbe <a class="header-anchor" href="#✏️-aufgabe-2-zufallige-farbe" aria-label="Permalink to &quot;✏️ Aufgabe 2: Zufällige Farbe&quot;">​</a></h3><ul><li>Nutze <code>random.choice([&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;])</code> für zufällige Farben.</li></ul><hr><h2 id="✅-5-zusammenfassung" tabindex="-1">✅ <strong>5) Zusammenfassung</strong> <a class="header-anchor" href="#✅-5-zusammenfassung" aria-label="Permalink to &quot;✅ **5) Zusammenfassung**&quot;">​</a></h2><ul><li>Funktionen machen Code übersichtlich.</li><li>Bibliotheken erweitern Python um viele Möglichkeiten.</li></ul>`,26)]))}const b=e(l,[["render",t]]);export{u as __pageData,b as default};
