import{_ as i,c as n,a2 as a,o as s}from"./chunks/framework.BQmytedh.js";const d=JSON.parse('{"title":"Komplexe Übungen und Projektarbeit","description":"Anspruchsvolle Aufgaben, die alle gelernten Konzepte kombinieren.","frontmatter":{"title":"Komplexe Übungen und Projektarbeit","description":"Anspruchsvolle Aufgaben, die alle gelernten Konzepte kombinieren."},"headers":[],"relativePath":"students/informatik/inf_klasse_10/Programmieren/block6.md","filePath":"students/informatik/inf_klasse_10/Programmieren/block6.md","lastUpdated":null}'),r={name:"students/informatik/inf_klasse_10/Programmieren/block6.md"};function l(t,e,h,u,o,p){return s(),n("div",null,e[0]||(e[0]=[a(`<h2 id="ziele" tabindex="-1">Ziele <a class="header-anchor" href="#ziele" aria-label="Permalink to &quot;Ziele&quot;">​</a></h2><ul><li>Alle gelernten Konzepte in komplexeren Programmen anwenden</li><li>Eigenständige Problemlösung entwickeln</li><li>Programme planen und strukturieren</li></ul><h2 id="komplexe-projekte" tabindex="-1">Komplexe Projekte <a class="header-anchor" href="#komplexe-projekte" aria-label="Permalink to &quot;Komplexe Projekte&quot;">​</a></h2><h3 id="projekt-1-interaktiver-taschenrechner" tabindex="-1">Projekt 1: Interaktiver Taschenrechner <a class="header-anchor" href="#projekt-1-interaktiver-taschenrechner" aria-label="Permalink to &quot;Projekt 1: Interaktiver Taschenrechner&quot;">​</a></h3><p>Schreibe ein umfassendes Taschenrechner-Programm, das:</p><ol><li>Den Benutzer nach zwei Zahlen fragt</li><li>Nach der gewünschten Operation fragt (+, -, *, /, Potenz)</li><li>Das Ergebnis berechnet und anzeigt</li><li>Fragt, ob eine weitere Rechnung durchgeführt werden soll</li><li>Bei Division durch 0 eine Fehlermeldung ausgibt</li></ol><p>Verwende dafür:</p><ul><li>Benutzereingaben mit <code>input()</code></li><li>Funktionen für jede Rechenart</li><li>While-Schleife für Wiederholung</li><li>Verknüpfte Bedingungen für Eingabe-Validierung</li></ul><h3 id="projekt-2-mustergenerator" tabindex="-1">Projekt 2: Mustergenerator <a class="header-anchor" href="#projekt-2-mustergenerator" aria-label="Permalink to &quot;Projekt 2: Mustergenerator&quot;">​</a></h3><p>Erstelle ein Programm, das dem Benutzer verschiedene Muster zur Auswahl anbietet:</p><ul><li>&quot;1&quot; für Spirale: Zeichnet eine Spirale mit 50 Schritten</li><li>&quot;2&quot; für Blume: Zeichnet 8 Kreise um einen Mittelpunkt herum</li><li>&quot;3&quot; für Stern-Explosion: Zeichnet 20 Linien vom Mittelpunkt nach außen</li><li>&quot;4&quot; für Zufallskunst: 15 zufällige Formen in zufälligen Farben</li><li>&quot;5&quot; für Regenbogen-Spirale: Spirale mit wechselnden Farben</li></ul><p>Anforderungen:</p><ul><li>Verwende für jedes Muster eine eigene Funktion</li><li>Nutze Schleifen und Zufallszahlen</li><li>Lass den Benutzer Parameter eingeben (z.B. Größe, Anzahl)</li></ul><h3 id="projekt-3-geometrie-quiz" tabindex="-1">Projekt 3: Geometrie-Quiz <a class="header-anchor" href="#projekt-3-geometrie-quiz" aria-label="Permalink to &quot;Projekt 3: Geometrie-Quiz&quot;">​</a></h3><p>Schreibe ein interaktives Quiz-Programm:</p><ol><li>Generiere zufällige geometrische Aufgaben: <ul><li>Kreisumfang bei gegebenem Radius</li><li>Rechteckfläche bei gegebenen Seiten</li><li>Dreieckswinkel (180° - andere Winkel)</li></ul></li><li>Frage den Benutzer nach der Lösung</li><li>Vergleiche mit der korrekten Antwort</li><li>Führe Statistik (richtige/falsche Antworten)</li><li>Gib am Ende eine Bewertung aus</li></ol><h3 id="projekt-4-turtle-kunstgalerie" tabindex="-1">Projekt 4: Turtle-Kunstgalerie <a class="header-anchor" href="#projekt-4-turtle-kunstgalerie" aria-label="Permalink to &quot;Projekt 4: Turtle-Kunstgalerie&quot;">​</a></h3><p>Erstelle ein Programm, das verschiedene Kunstwerke zeichnet:</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fraktal_baum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(laenge, winkel, tiefe):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;Zeichnet einen Fraktal-Baum&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tiefe </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    t.forward(laenge)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    t.left(winkel)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fraktal_baum(laenge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, winkel, tiefe </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    t.right(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> winkel)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fraktal_baum(laenge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, winkel, tiefe </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    t.left(winkel)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    t.backward(laenge)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mandala</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(groesse, details):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;Zeichnet ein Mandala&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(details):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        t.circle(groesse)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        t.right(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">360</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> details)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> koch_schneeflocke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(laenge, ordnung):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;Zeichnet eine Koch-Schneeflocke&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Implementierung für fortgeschrittene Schüler</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="herausfordernde-einzelaufgaben" tabindex="-1">Herausfordernde Einzelaufgaben <a class="header-anchor" href="#herausfordernde-einzelaufgaben" aria-label="Permalink to &quot;Herausfordernde Einzelaufgaben&quot;">​</a></h2><h3 id="aufgabe-1-zahlenratsel" tabindex="-1">Aufgabe 1: Zahlenrätsel <a class="header-anchor" href="#aufgabe-1-zahlenratsel" aria-label="Permalink to &quot;Aufgabe 1: Zahlenrätsel&quot;">​</a></h3><p>Programmiere ein Zahlenratespiel:</p><ul><li>Computer wählt zufällige Zahl zwischen 1-100</li><li>Benutzer rät, Computer gibt Hinweise (&quot;zu hoch&quot;, &quot;zu niedrig&quot;)</li><li>Zähle die Anzahl der Versuche</li><li>Nach dem Spiel: Statistik über bisherige Spiele</li></ul><h3 id="aufgabe-2-turtle-grafik-editor" tabindex="-1">Aufgabe 2: Turtle-Grafik-Editor <a class="header-anchor" href="#aufgabe-2-turtle-grafik-editor" aria-label="Permalink to &quot;Aufgabe 2: Turtle-Grafik-Editor&quot;">​</a></h3><p>Erstelle einen einfachen Grafik-Editor:</p><ul><li>Menü mit verschiedenen Zeichenoptionen</li><li>Benutzer kann Farben wählen</li><li>Verschiedene Formen verfügbar</li><li>&quot;Radiergummi&quot;-Funktion (weiße Farbe)</li><li>Speichern/Laden von Zeichnungen (als Koordinatenliste)</li></ul><h3 id="aufgabe-3-labyrinth-generator" tabindex="-1">Aufgabe 3: Labyrinth-Generator <a class="header-anchor" href="#aufgabe-3-labyrinth-generator" aria-label="Permalink to &quot;Aufgabe 3: Labyrinth-Generator&quot;">​</a></h3><p>Generiere einfache Labyrinthe:</p><ul><li>Erstelle ein Gitter aus Linien</li><li>Entferne zufällig Wände um Wege zu schaffen</li><li>Stelle sicher, dass Start und Ziel erreichbar sind</li><li>Bonus: Löse das Labyrinth automatisch</li></ul><h3 id="aufgabe-4-wetter-simulation" tabindex="-1">Aufgabe 4: Wetter-Simulation <a class="header-anchor" href="#aufgabe-4-wetter-simulation" aria-label="Permalink to &quot;Aufgabe 4: Wetter-Simulation&quot;">​</a></h3><p>Simuliere Wetter-Daten:</p><ul><li>Generiere zufällige Temperaturen über 30 Tage</li><li>Berechne Durchschnitt, Maximum, Minimum</li><li>Zeichne ein einfaches Diagramm der Temperaturen</li><li>Vorhersage für den nächsten Tag basierend auf Trend</li></ul><h2 id="bewertungskriterien-fur-projekte" tabindex="-1">Bewertungskriterien für Projekte <a class="header-anchor" href="#bewertungskriterien-fur-projekte" aria-label="Permalink to &quot;Bewertungskriterien für Projekte&quot;">​</a></h2><p>Bei der Bewertung eurer Projekte achte ich auf:</p><ol><li><strong>Funktionalität</strong>: Läuft das Programm fehlerfrei?</li><li><strong>Code-Qualität</strong>: Ist der Code sauber strukturiert und kommentiert?</li><li><strong>Verwendung der Konzepte</strong>: Werden Funktionen, Schleifen, Bedingungen sinnvoll eingesetzt?</li><li><strong>Kreativität</strong>: Eigene Ideen und Erweiterungen</li><li><strong>Problemlösung</strong>: Wie werden Herausforderungen gelöst?</li></ol><h2 id="zusammenfassung-des-kurses" tabindex="-1">Zusammenfassung des Kurses <a class="header-anchor" href="#zusammenfassung-des-kurses" aria-label="Permalink to &quot;Zusammenfassung des Kurses&quot;">​</a></h2><p>In diesem Python-Kurs hast du gelernt:</p><ul><li><strong>Variablen und Datentypen</strong>: Daten speichern und verarbeiten</li><li><strong>Bedingungen</strong>: Programme Entscheidungen treffen lassen</li><li><strong>Schleifen</strong>: Code wiederholen lassen</li><li><strong>Funktionen</strong>: Code strukturieren und wiederverwenden</li><li><strong>Bibliotheken</strong>: Fertige Funktionen nutzen</li><li><strong>Benutzereingaben</strong>: Interaktive Programme erstellen</li></ul><p>Mit diesen Werkzeugen kannst du bereits viele interessante Programme schreiben. Das ist erst der Anfang deiner Programmier-Reise!</p>`,39)]))}const g=i(r,[["render",l]]);export{d as __pageData,g as default};
